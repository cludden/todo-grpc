syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

package mindflash.todo;
option go_package = "proto";

service Todos {
    // Mark an existing Todo as completed
    rpc CompleteTodo(CompleteTodoInput) returns (CompleteTodoOutput) {
        option (google.api.http) = {
            post: "/todos/complete"
            body: "*"
        };
    }

    // Creates a new Todo
    rpc CreateTodo(CreateTodoInput) returns (CreateTodoOutput) {
        option (google.api.http) = {
            post: "/todos"
            body: "*"
        };
    }

    // Retrieves a paginated list of Todos
    rpc ListTodos(ListTodosInput) returns (ListTodosOutput) {
        option (google.api.http) = {
            get: "/todos"
        };
    }
}

// Represents an individual task
message Todo {
    // Primary identifier
    string id = 1 [json_name="id"];

    // Boolean flag indicating whether or not the todo has been completed
    bool complete = 2 [json_name="complete"];

    // Completion timestamp
    google.protobuf.Timestamp completed_at = 3 [json_name="completed_at"];

    // Creation timestamp
    google.protobuf.Timestamp created_at = 4 [json_name="created_at"];

    // Optional detail
    string description = 5 [json_name="description"];

    // Task title
    string title = 6 [json_name="title"];
}

// Describes the input to a CompleteTodo operation
message CompleteTodoInput {
    // Primary identifier
    // @inject_tag: validate:"required"
    string id = 1;
}

// Describes the output from a successful CreateTodo operation
message CompleteTodoOutput {
    // Updated todo
    Todo todo = 1;
}

// Describes the input to a CreateTodo operation
message CreateTodoInput {
    // Optional detail
    // @inject_tag: validate:"omitempty,min=3"
    string description = 1;

    // Task title
    // @inject_tag: validate:"required,min=3"
    string title = 2;
}

// Describes the output from a successful CreateTodo operation
message CreateTodoOutput {
    // Newly created Todo
    Todo todo = 1;
}

// Describes the input to a ListTodos operation
message ListTodosInput {
    // Pagination offset
    // @inject_tag: validate:"omitempty,numeric"
    string after = 1;

    // Page size
    // @inject_tag: validate:"omitempty,min=1,max=20"
    int32 first = 2;

    // Simple query string
    // @inject_tag: validate:"omitempty,min=3"
    string query = 3;
}

// Describes the output from a successful ListTodos operation
message ListTodosOutput {
    // List of Todos
    repeated Todo todos = 1;

    // Total number of todos
    int32 total = 2;
}